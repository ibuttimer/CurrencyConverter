spring.application.name=currency-conversion
server.port=8100

currency.exchange.host=${CURRENCY_EXCHANGE_URL}

# Configuring info endpoint
info.app.name=Currency Conversion Service
info.app.description=API for Currency Conversion microservice
info.app.version=@project.version@

# debug
logging.level.org.springframework=INFO
logging.level.web=INFO

# using 'optional:file:./mysql.properties', sometimes 'spring.datasource.platform' not available for CommandLineRunner bean
spring.config.import=optional:./mysql.properties,optional:configserver:${CONFIG_SERVER_URL}

# retry for config
spring.cloud.config.fail-fast=true

# database
# imported from spring.config.import=optional:file:./mysql.properties

# fail fast > 0, 0 get initial connection, < 0 don't get initial connection
spring.datasource.hikari.initializationFailTimeout=0

#Eureka
eureka.client.serviceUrl.defaultZone=${SERVICE_URL_DEFAULT_ZONE}

# openapi
springdoc.version=@project.version@
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.packagesToScan=com.example.microservices
springdoc.pathsToMatch=/**

# resilience4j
resilience4j.retry.instances.retrieveCurrencyConversion.maxRetryAttempts=5
resilience4j.retry.instances.retrieveCurrencyConversion.waitDuration=10s
resilience4j.retry.instances.retrieveCurrencyConversion.enableExponentialBackoff=true

resilience4j.circuitbreaker.instances.retrieveCurrencyConversion.failureRateThreshold=90

resilience4j.ratelimiter.instances.retrieveCurrencyConversion.limitForPeriod=2
resilience4j.ratelimiter.instances.retrieveCurrencyConversion.limitRefreshPeriod=10s

resilience4j.bulkhead.instances.retrieveCurrencyConversion.maxConcurrentCalls=10

# sampling
# uncomment to disable zipkin
#spring.sleuth.enabled=false
#spring.cloud.gcp.trace.enabled=false
spring.zipkin.base-url=${ZIPKIN_SERVER_URL}
spring.sleuth.sampler.probability=1.0

# actuator
management.endpoints.web.exposure.include=*

# less priority than config server

# api gateway
currency-conversion.api-gateway=http://localhost:8765/

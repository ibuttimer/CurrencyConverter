spring.application.name=currency-exchange
server.port=8000

spring.profiles.active=default
spring.cloud.config.profile=default

# Configuring info endpoint
info.app.name=Currency Exchange Service
info.app.description=API for Currency Exchange microservice
info.app.version=@project.version@

# app flavour
app.flavour=default

# debug
logging.level.org.springframework=INFO
logging.level.web=INFO

# using 'optional:file:./mysql.properties', sometimes 'spring.datasource.platform' not available for CommandLineRunner bean
spring.config.import=optional:./mysql.properties,optional:configserver:${CONFIG_SERVER_URL}

# retry for config
spring.cloud.config.fail-fast=true

# database
# imported from spring.config.import=optional:file:./mysql.properties
spring.h2.console.enabled=false

# fail fast > 0, 0 get initial connection, < 0 don't get initial connection
spring.datasource.hikari.initializationFailTimeout=0

#Eureka
eureka.client.serviceUrl.defaultZone=${SERVICE_URL_DEFAULT_ZONE}

# openapi
springdoc.version=@project.version@
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.packagesToScan=com.example.microservices
springdoc.pathsToMatch=/**

# set false to disable scheduled updates
io.reflectoring.scheduling.enabled=true

# sampling
# Enable/disable zipkin; set to true/false
spring.sleuth.enabled=${TRACING_ENABLED}
spring.cloud.gcp.trace.enabled=${TRACING_ENABLED}
spring.zipkin.base-url=${ZIPKIN_SERVER_URL}
spring.sleuth.sampler.probability=1.0

# actuator
management.endpoints.web.exposure.include=*

# less priority than config server

# scale to use for currency calculations
currency-exchange.rate-scale=6


